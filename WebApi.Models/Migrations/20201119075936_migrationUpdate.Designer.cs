// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Models;

namespace WebApi.Models.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20201119075936_migrationUpdate")]
    partial class migrationUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApi.Models.Models.Identity.AccountModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("AccountIp")
                        .HasColumnType("text");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AccountPasswd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AccountPasswdEncrypt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("AccountState")
                        .HasColumnType("bigint");

                    b.Property<long>("AccountType")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<long>("CreateorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime");

                    b.Property<long>("UpdateorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("case_account");
                });

            modelBuilder.Entity("WebApi.Models.Models.Identity.IdentityGroupUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("UserGroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("case_group_user");
                });

            modelBuilder.Entity("WebApi.Models.Models.Identity.IdentityPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<long>("CreateorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ParentPermissionCode")
                        .HasColumnType("text");

                    b.Property<string>("PermissionCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PermissionRemark")
                        .HasColumnType("text");

                    b.Property<long>("SortNum")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime");

                    b.Property<long>("UpdateorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("case_permission");
                });

            modelBuilder.Entity("WebApi.Models.Models.Identity.IdentityRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<long>("CreateorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ParentCode")
                        .HasColumnType("text");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoleRemark")
                        .HasColumnType("text");

                    b.Property<long>("SortNum")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime");

                    b.Property<long>("UpdateorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("case_role");
                });

            modelBuilder.Entity("WebApi.Models.Models.Identity.IdentityRolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("case_role_permission");
                });

            modelBuilder.Entity("WebApi.Models.Models.Identity.IdentityUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("BirthDay")
                        .HasColumnType("text");

                    b.Property<string>("CityCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<long>("CreateorId")
                        .HasColumnType("bigint");

                    b.Property<string>("DistrictCode")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NickName")
                        .HasColumnType("text");

                    b.Property<string>("ProvinceCode")
                        .HasColumnType("text");

                    b.Property<string>("RealName")
                        .HasColumnType("text");

                    b.Property<string>("TelePhone")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime");

                    b.Property<long>("UpdateorId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserAddress")
                        .HasColumnType("text");

                    b.Property<string>("UserImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserSex")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("case_user");
                });

            modelBuilder.Entity("WebApi.Models.Models.Identity.IdentityUserGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<long>("CreateorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ParentUserGroupCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime");

                    b.Property<long>("UpdateorId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserGroupCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserGroupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserGroupRemark")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("case_user_group");
                });

            modelBuilder.Entity("WebApi.Models.Models.Identity.IdentityUserGroupRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserGroupId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("case_usergroup_role");
                });

            modelBuilder.Entity("WebApi.Models.Models.Identity.IdentityUserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("case_user_role");
                });

            modelBuilder.Entity("WebApi.Models.Models.Identity.LoginAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Brower")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<long>("CreateorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Eimi")
                        .HasColumnType("text");

                    b.Property<string>("Host")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LoginIp")
                        .HasColumnType("text");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime");

                    b.Property<long>("LoginType")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime");

                    b.Property<long>("UpdateorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("case_login_account");
                });

            modelBuilder.Entity("WebApi.Models.Models.Identity.MenuModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<long>("CreateorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MenuCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MenuPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MenuRemark")
                        .HasColumnType("text");

                    b.Property<string>("MenuUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParentMenuCode")
                        .HasColumnType("text");

                    b.Property<long>("SortNum")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime");

                    b.Property<long>("UpdateorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("case_menu");
                });
#pragma warning restore 612, 618
        }
    }
}
